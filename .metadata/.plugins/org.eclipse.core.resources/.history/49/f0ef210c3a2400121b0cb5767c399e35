package com.j3ltd.server.session;


import javax.ejb.*;
import com.j3ltd.server.entities.*;
import com.j3ltd.server.exceptions.PersonEmailException;
import com.j3ltd.server.exceptions.PersonEntityExistsException;
import com.j3ltd.server.exceptions.PersonPasswordException;

import javax.management.Query;
import javax.persistence.*;
import com.j3ltd.server.sessionremote.*;
import com.j3ltd.server.Exceptions.*;


@Stateless
public class EntityFacadeBean<em> implements EntityFacade 
{
  @PersistenceContext(unitName="shoestringPU") EntityManager em;
    
  public Person getPerson(String email) 
  {
    Person entity = null;
    try {
      Query query = em.createQuery("SELECT p FROM Person p WHERE p.email = ?1");
      ((Object) query).setParameter(1, email);
      entity = (Person) ((Object) query).getSingleResult();
    }
    catch (NoResultException noneFound) {
      // if not found, just return null
    }
    return entity;
  }
  
    
  public Person createPerson(Person toCreate) 
    throws PersonEntityExistsException,  PersonPasswordException,
           PersonEmailException 
    {  
	    String email = toCreate.getEmail();
	    
	    if (email == null || email.trim().length() == 0) {
	      throw new PersonEmailException("Length is zero");
	    }
	    
	    String password = toCreate.getPassword();
	    
	    if (password == null || password.length() < 6)
	    {
	      throw new PersonPasswordException("Length is less than 6");
	    }
	    if (getPerson(email) != null) {
	      throw new PersonEntityExistsException(
	                  "Person record already exists with an email of " + 
	                  toCreate.getEmail());
	    }
    
	em.persist(toCreate);
    return toCreate;
    }
}  
